[
  {
    "path": "posts/2022-04-19-k-means-clustering-tutorial-customer-demographic-data/",
    "title": "K-Means Clustering Tutorial: Customer Demographic Data",
    "description": "In this post, we introduce what k-means clustering is, how it works in R, how to interpret\nthe output, and the limitations associated with such unsupervised machine learning modelling",
    "author": [
      {
        "name": "Jonathan Choo",
        "url": {}
      }
    ],
    "date": "2022-04-19",
    "categories": [],
    "contents": "\r\nWelcome to this short introduction to k-means! First, let me explain\r\nwhat k-means is to give you a better idea on what we will be learning\r\nhere.\r\nK-means clustering is a form of unsupervised machine\r\nlearning clustering algorithm which falls under the\r\n“partitioning clustering” umbrella. Unlike supervised machine learning,\r\nunsupervised ML does not have access to ground truth to compare the\r\noutput of the clustering algorithm to the true labels to evaluate its\r\nperformance. We only want to try to investigate the structure of the\r\ndata by grouping the data points into distinct subgroups that are as\r\nsimilar together as possible. It is a very popular ML clustering\r\nalgorithm, and very simple to implement in any data set. The other type\r\nof clustering is Hierachical clustering, which we will not be touching\r\non here in this post. However, within partitioning clustering, we also\r\nhave another algorithm called Fuzzy C-Means clustering.\r\nThe main difference between these two algorithms is that K-means\r\nclustering assumes that every data point belongs to one single\r\n“cluster”. Fuzzy C-Means clustering, on the other hand, relaxes this\r\nassumption and provides leeway for some data points to be in two or more\r\nclusters. Where you would use K-means clustering for understanding\r\nsimple patterns in the data set (i.e., what are the characteristics of\r\ncertain groups), you would use Fuzzy C-Means clustering when the group\r\nmembership criteria are not as clear cut. For the purposes of this\r\ntutorial, we will just focus on K-means clustering\r\nLet’s begin by first understanding what kind of data we are working\r\nwith. You can download the data from Kaggle\r\n\r\n\r\ndf <- read.csv(\"customer_data.csv\")\r\nhead(df)\r\n\r\n\r\n  CustomerID Gender Age Annual_Income.k. Spending_Score\r\n1          1   Male  19               15             39\r\n2          2   Male  21               15             81\r\n3          3 Female  20               16              6\r\n4          4 Female  23               16             77\r\n5          5 Female  31               17             40\r\n6          6 Female  22               17             76\r\n\r\nHere, we have four usable data columns: Gender, Age, Annual income\r\nand Spending Score. For us to generate meaningful k-means clusters, we\r\nfirst need to ensure that the data we have are numbers, not factors or\r\ncharacters. Because Gender is in characters, we either can filter out\r\nMales and Females into their separate data sets, or, we can include them\r\ninto the analysis by dummy-coding them. We will include them into the\r\nanalysis by dummy coding them\r\n\r\n\r\ndf$Gender[df$Gender == \"Male\"] <- 1\r\ndf$Gender[df$Gender == \"Female\"] <- 2\r\ndf$Gender <- as.numeric(df$Gender)\r\n\r\n\r\n\r\nBecause CustomerID is meaningless, merely as a way to differentiate\r\ncustomers, we should remove it from the dataframe to ensure only the\r\nrelevant data is used for clustering\r\n\r\n\r\ndf <- df[,2:5]\r\nhead(df)\r\n\r\n\r\n  Gender Age Annual_Income.k. Spending_Score\r\n1      1  19               15             39\r\n2      1  21               15             81\r\n3      2  20               16              6\r\n4      2  23               16             77\r\n5      2  31               17             40\r\n6      2  22               17             76\r\n\r\nOur dataframe is now prepared for clustering analysis. Before we\r\nproceed, let us try to understand what we are trying to learn from this\r\nanalysis. In the dataframe, you can see the age, annual income and\r\nspending score attached to each customer. One insightful data that we\r\ncan try to garner from this analysis is to determine the characteristics\r\nof subgroups. For example:\r\nWould older adults with a higher annual income have a higher\r\nspending score or would they spend less?\r\nWould there be any difference when we compare between genders?\r\nThese are some questions that we can answer based on the clustering\r\nanalysis that we will implement. Now, let us load in the required\r\npackages and run the clustering analysis\r\n\r\n\r\nlibrary(cluster)\r\n\r\nmodel <- kmeans(df, centers = 5, nstart = 20)\r\nmodel\r\n\r\n\r\nK-means clustering with 5 clusters of sizes 36, 23, 23, 79, 39\r\n\r\nCluster means:\r\n    Gender      Age Annual_Income.k. Spending_Score\r\n1 1.472222 40.66667         87.75000       17.58333\r\n2 1.608696 25.52174         26.30435       78.56522\r\n3 1.608696 45.21739         26.30435       20.91304\r\n4 1.582278 43.08861         55.29114       49.56962\r\n5 1.538462 32.69231         86.53846       82.12821\r\n\r\nClustering vector:\r\n  [1] 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2\r\n [33] 3 2 3 2 3 2 3 2 3 2 3 2 3 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\r\n [65] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\r\n [97] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 1 5 4 5\r\n[129] 1 5 1 5 1 5 1 5 1 5 1 5 1 5 4 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5\r\n[161] 1 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5 1 5\r\n[193] 1 5 1 5 1 5 1 5\r\n\r\nWithin cluster sum of squares by cluster:\r\n[1] 17678.472  4627.739  8954.087 30157.266 13982.051\r\n (between_SS / total_SS =  75.6 %)\r\n\r\nAvailable components:\r\n\r\n[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"    \r\n[5] \"tot.withinss\" \"betweenss\"    \"size\"         \"iter\"        \r\n[9] \"ifault\"      \r\n\r\nLet’s break this down step-by-step:\r\nWe called the kmeans function from the cluster package\r\nkmeans function accepts several arguments, the first is to indicate\r\nwhat dataframe the analysis will be based on, in this case “df”\r\nThe other two arguments centers and\r\nnstart are core arguments in the k-means analysis.\r\nCenters\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-04-19T11:40:25+08:00",
    "input_file": "k-means-clustering-tutorial-customer-demographic-data.knit.md"
  },
  {
    "path": "posts/2022-04-12-creating-a-raincloud-plot/",
    "title": "Creating a Raincloud Plot",
    "description": "This is a short introduction to creating a Raincloud plot, which combines the data visualization of a violin plot with a density plot.",
    "author": [
      {
        "name": "Jonathan Choo",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2022-04-12",
    "categories": [],
    "contents": "\r\nDistill is a publication format for scientific and technical writing,\r\nnative to the web.\r\nLearn more about using Distill at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-04-12T13:58:48+08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Modulatory Effects of Language Context on Executive Functioning in Multilinguals",
    "description": "We investigate the effects of different language contexts (i.e., Monolingual versus Bilingual contexts) on the adaptive changes on Executive Function in individuals with different degrees of multilingualism",
    "author": [
      {
        "name": "Jonathan Choo",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2022-04-05",
    "categories": [],
    "contents": "\r\nLearn more about creating blogs with Distill at:https://rstudio.github.io/distill/blog.html\"\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-04-05T17:34:13+08:00",
    "input_file": {}
  }
]
